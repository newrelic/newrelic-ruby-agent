name: PR Continuous Integration
on:
  pull_request:

jobs:
  run_rubocop:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
      - run: bundle
      - run: rubocop

  unit_tests:
    needs: run_rubocop
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - "3306:3306"
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [2.2.10, 3.1.2, jruby-9.3.7.0]
    steps:
      - uses: actions/checkout@v2

        # - curl is needed for Curb
        # - xslt is needed for older Nokogiris, RUBY_VERSION < 2.5
        # - sasl is needed for memcached
      - name: Install OS packages
        run: sudo apt-get install -y --no-install-recommends libcurl4-nss-dev libsasl2-dev libxslt1-dev

      - name: Install Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - name: Set up mini-envs for ruby version
        uses: kanga333/variable-mapper@master
        with:
          key: ${{ matrix.ruby-version }}
          map: |
            {
              "2.2.10": {
                "rails": "norails,rails41,rails32"
              },
              "3.1.2": {
                "rails": "norails,rails61,rails70"
              },
              "jruby-9.3.7.0": {
                "rails": "norails,rails61,rails52,rails42"
              }
            }

      - if: matrix.ruby-version == '2.2.10' || matrix.ruby-version == 'jruby-9.3.7.0'
        name: Cache mysql55
        id: mysql55-cache
        uses: john-shaffer/cache@sudo-tar
        with:
          path: /usr/local/mysql55
          key: mysql55-install

      - if: steps.mysql55-cache.outputs.cache-hit != 'true' && (matrix.ruby-version == '2.2.10' || matrix.ruby-version == 'jruby-9.3.7.0')
        name: Install mysql55
        run: sudo ./test/script/install_mysql55

      - name: Setup bundler
        run: ./.github/workflows/scripts/setup_bundler
        env:
          RUBY_VERSION: ${{ matrix.ruby-version }}
          RAILS_VERSION: ${{ env.rails }}
      - name: Run Unit Tests
        uses: nick-invision/retry@v1.0.0
        with:
          timeout_minutes: 30
          max_attempts: 2
          command: bundle exec rake test:env[${{ env.rails }}] TESTOPTS="--verbose"
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          JRUBY_OPTS: --dev --debug
          COVERAGE: true

      - name: Save coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-unit-tests
          path: lib/coverage_*/.resultset.json

  multiverse:
    needs: run_rubocop
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mongodb:
        image: mongo:5.0.11
        ports:
          - 27017:27017
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
        options: >-
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      memcached:
        image: memcached:latest
        ports:
          - 11211:11211
        options: >-
          --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        multiverse: [agent, background, background_2, database, frameworks, httpclients, httpclients_2, rails, rest]
        ruby-version: [2.2.10, 3.1.2]

    steps:
      - uses: actions/checkout@v2

        # - curl is needed for Curb
        # - xslt is needed for older Nokogiris, RUBY_VERSION < 2.5
        # - sasl is needed for memcached
      - name: Install OS packages
        run: sudo apt-get install -y --no-install-recommends libcurl4-nss-dev libsasl2-dev libxslt1-dev

      - name: Install Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - if: matrix.ruby-version == '2.2.10' || matrix.ruby-version == '2.3.8'
        name: Cache mysql55
        id: mysql55-cache
        uses: john-shaffer/cache@sudo-tar
        with:
          path: /usr/local/mysql55
          key: mysql55-install

      - if: steps.mysql55-cache.outputs.cache-hit != 'true' && (matrix.ruby-version == '2.2.10' || matrix.ruby-version == '2.3.8')
        name: Install mysql55
        run: sudo ./test/script/install_mysql55

      - name: Setup bundler
        run: ./.github/workflows/scripts/setup_bundler_multiverse
        env:
          RUBY_VERSION: ${{ matrix.ruby-version }}

      - name: Test MySQL
        run: mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"

      - name: Run Multiverse Tests
        uses: nick-invision/retry@v1.0.0
        with:
          timeout_minutes: 60
          max_attempts: 2
          command: bundle exec rake test:multiverse[group="${{ matrix.multiverse }}",verbose]
        env:
          DB_PASSWORD: root
          MYSQL_PASSWORD: root
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
          MYSQL_HOST: 127.0.0.1
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: password
          SERIALIZE: 1
          COVERAGE: true

      - name: Annotate errors
        if: ${{ failure() }}
        uses: ./.github/actions/annotate

      - name: Save coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-multiverse
          path: lib/coverage_*/.resultset.json
          retention-days: 2

  infinite_tracing:
    needs: run_rubocop
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [2.5.9, 3.1.2]
    steps:
      - uses: actions/checkout@v2

      - name: Install Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - name: Bundle
        run: bundle install

      - name: Run Multiverse Tests
        uses: nick-invision/retry@v1.0.0
        with:
          timeout_minutes: 15
          max_attempts: 2
          command: bundle exec rake test:multiverse[group=infinite_tracing,verbose]
        env:
          SERIALIZE: 1
          COVERAGE: true

      - name: Annotate errors
        if: ${{ failure() }}
        uses: ./.github/actions/annotate

      - name: Save coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-infinite-tracing
          path: lib/coverage_*/.resultset.json

  jruby_multiverse:
    needs: run_rubocop
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - "3306:3306"
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mongodb:
        image: mongo:5.0.11
        ports:
          - 27017:27017
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
        options: >-
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      memcached:
        image: memcached:latest
        ports:
          - 11211:11211
        options: >-
          --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        multiverse: [agent, background, background_2, database, frameworks, httpclients, httpclients_2, rails, rest]
    steps:
      - name: Set the default Java version
        run: sudo update-alternatives --set java ${JAVA_HOME_8_X64}/bin/java &&
             sudo update-alternatives --set javac ${JAVA_HOME_8_X64}/bin/javac &&
             java -version &&
             javac -version

      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Install JRuby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: jruby-9.3.7.0
        env:
          JAVA_HOME: /usr/lib/jvm/temurin-8-jdk-amd64

      - name: Bundle
        run: bundle install
        env:
          JAVA_HOME: /usr/lib/jvm/temurin-8-jdk-amd64

      - name: Run Multiverse Tests
        uses: nick-invision/retry@v1.0.0
        with:
          timeout_minutes: 60
          max_attempts: 1
          # jruby -v yields info about which JVM version JRuby is using
          command: jruby -v; bundle exec rake test:multiverse[group=${{ matrix.multiverse }},verbose]
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          SERIALIZE: 1
          JRUBY_OPTS: --dev
          JAVA_HOME: /usr/lib/jvm/temurin-8-jdk-amd64

      - name: Annotate errors
        if: ${{ failure() }}
        uses: ./.github/actions/annotate

  simplecov:
    needs: [unit_tests, multiverse, infinite_tracing]
    runs-on: ubuntu-22.04
    if: github.repository_owner == 'newrelic'
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
      - run: bundle
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Collate Coverage Results
        run: bundle exec rake coverage:report
      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-combined
          path: lib/coverage_results
          retention-days: 2
      - name: Simplecov Report
        uses: ./.github/actions/simplecov-report
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          resultPath: lib/coverage_results/.last_run.json
          failedThreshold: 85
          failedThresholdBranch: 80
