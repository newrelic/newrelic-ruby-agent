# This file is distributed under New Relic's license terms.
# See https://github.com/newrelic/newrelic-ruby-agent/blob/main/LICENSE for complete details.
# frozen_string_literal: true

# not testing the latest of activerecord in this suite because
# mysql2 has issues with newer Rubies

# don't change the first index to a number ending in other than zero
# it is used by jdbc_version
ACTIVERECORD_VERSIONS = [
  ['5.2.0', 2.4, 2.6],
  ['5.1.0', 2.4, 2.5],
  ['5.0.0', 2.4, 2.4]
]

def jdbc_version(activerecord_version)
  return unless RUBY_PLATFORM.eql?('java') && activerecord_version
  # remove the '.' between the major and minor versions
  activerecord_version.sub('.', '')
end

def mysql2_version(activerecord_version)
  return if activerecord_version.nil?
  if activerecord_version.delete('^0-9', '^.').start_with?('5')
    '0.4.4'
  else
    '0.3.21'
  end
end

def mysql_gem(activerecord_version)
  if RUBY_PLATFORM.eql?('java')
    "gem 'activerecord-jdbcmysql-adapter'#{jdbc_version(activerecord_version)}"
  else
    "gem 'mysql2'#{add_version(mysql2_version(activerecord_version))}"
  end
end

# Rails 4.0 sets the dependency on Minitest to “~> 4.2”
def minitest_activerecord_version(activerecord_version)
  return if activerecord_version.nil?
  if activerecord_version.delete('^0-9', '^.').start_with?('4.0')
    add_version('4.2.0', false)
  else
    add_version('5.2.3', false)
  end
end

def gem_list(activerecord_version = nil)
  <<~RB
    gem 'rack'
    gem 'minitest'#{minitest_activerecord_version(activerecord_version)}
    gem 'activerecord'#{activerecord_version}
    #{mysql_gem(activerecord_version)}
  RB
end

create_gemfiles(ACTIVERECORD_VERSIONS)
